import pytest

from cfdb.models.schema import (
    Artifacts,
    ArtifactsFilePaths,
    FeedstockOutputs,
    Feedstocks,
    Packages,
    RelationsMapFilePaths,
    uniq_id,
)


@pytest.fixture
def id() -> str:
    return uniq_id()


@pytest.fixture
def sample_feedstock() -> Feedstocks:
    return Feedstocks(name="feedstock_1")


@pytest.fixture
def sample_package() -> Packages:
    return Packages(name="package_1")


@pytest.fixture
def sample_feedstock_output(sample_feedstock, sample_package) -> FeedstockOutputs:
    return FeedstockOutputs(
        id="output_1",
        path="/path/to/output_1",
        feedstock_name=sample_feedstock.name,
        package_name=sample_package.name,
        hash="123456",
    )


@pytest.fixture
def sample_artifact() -> Artifacts:
    return Artifacts(
        name="artifact_1",
        platform="linux",
        version="1.0",
        package_name="package_1",
        build=0,
    )


@pytest.fixture
def sample_artifacts_file_path(id) -> ArtifactsFilePaths:
    return ArtifactsFilePaths(id=id, path="/path/to/artifact_file")


@pytest.fixture
def sample_relations_map_file_path(
    sample_artifact, sample_artifacts_file_path
) -> RelationsMapFilePaths:
    return RelationsMapFilePaths(
        file_path_id=sample_artifacts_file_path.id, artifact_name=sample_artifact.name
    )


def test_feedstocks(sample_feedstock):
    assert sample_feedstock.name == "feedstock_1"


def test_packages(sample_package):
    assert sample_package.name == "package_1"


def test_feedstock_outputs(sample_feedstock_output, sample_feedstock, sample_package):
    assert sample_feedstock_output.id == "output_1"
    assert sample_feedstock_output.path == "/path/to/output_1"
    assert sample_feedstock_output.feedstock_name == sample_feedstock.name
    assert sample_feedstock_output.package_name == sample_package.name
    assert sample_feedstock_output.hash == "123456"


def test_artifacts(sample_artifact):
    assert sample_artifact.name == "artifact_1"
    assert sample_artifact.platform == "linux"
    assert sample_artifact.version == "1.0"
    assert sample_artifact.package_name == "package_1"
    assert sample_artifact.build == 0


def test_artifacts_file_paths(sample_artifacts_file_path, id):
    assert sample_artifacts_file_path.id == id
    assert sample_artifacts_file_path.path == "/path/to/artifact_file"


def test_relations_map_file_paths(
    sample_relations_map_file_path, sample_artifacts_file_path, sample_artifact
):
    # because the id is generated by the database, it will be None when we create the object, and only populated when we commit it to the database
    assert sample_relations_map_file_path.id == None
    assert sample_relations_map_file_path.file_path_id == sample_artifacts_file_path.id
    assert sample_relations_map_file_path.artifact_name == sample_artifact.name
